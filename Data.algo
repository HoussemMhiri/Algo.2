ALGORITHM algorithm_name
VAR
    l1:INTEGER:=arr1.length -1
    l2:INTEGER:=arr2.length -1
    sum:INTEGER:=0; 
    i:INTEGER
    j:INTEGER
    arr1 : ARRAY_OF INTEGER[4];
    arr2 : ARRAY_OF INTEGER[5];
   
BEGIN 
    FOR i FROM 0 TO l2 STEP step 1 DO
        FOR j FROM 0 TO l1 STEP step 1 DO
            IF (arr1[j] <> arr2[i]) THEN
                sum=arr2[i];
            END_IF
        END_FOR
    END_FOR
    FOR j FROM 0 TO l1 STEP step 1 DO
        FOR i FROM 0 TO l2 STEP step 1 DO
            IF (arr2[i] <> arr1[j]) THEN
                sum=arr1[j];
            END_IF
        END_FOR
    END_FOR 
     Write ("the total of different numbers: ",sum)
END  

// Problem 2

PROCEDURE dot_product(v1,v2: ARRAY_OF INTEGER, ps:INTEGER;)
VAR
    i,n,m:INTEGER
BEGIN
  ps:=0
    n:=v1.length-1
    m:=v2.length-1 
    IF (n <> m) THEN
        Write("You can't calculate the ps of 2 vectors with diffrent length.") 
    END_IF 
    FOR i FROM 0 TO n STEP step 1  DO
        ps:=ps+v1[i]*v2[i]
    END_FOR
END 

FUNCTION dot_product(v1,v2: ARRAY_OF INTEGER) : INTEGER
VAR
      i,n,m,ps:INTEGER
BEGIN
   ps:=0
    n:=v1.length-1
    m:=v2.length-1 
    IF (n <> m) THEN
        Write("You can't calculate the ps of 2 vectors with diffrent length.") 
    END_IF 
    FOR i FROM 0 TO n STEP step 1  DO
        ps:=ps+v1[i]*v2[i]
    END_FOR
    RETURN ps ;
END 

ALGORITHM orth_vectors
VAR
    v: ARRAY_OF ARRAY
    i,j,ps: INTEGER
BEGIN
    FOR i FROM 0 TO v.length-1 STEP 1  DO
        FOR j FROM i+1 TO v.length-1 STEP 1  DO
         ps:= dot_product(v[i],v[j]) 
IF (ps = 0) THEN
    Write(v[i] ,"and" v[j] , "are orthogonal")
END_IF
        END_FOR
    END_FOR
END